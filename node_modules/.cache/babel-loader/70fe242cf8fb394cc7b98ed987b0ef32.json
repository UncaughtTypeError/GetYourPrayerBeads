{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\src\\\\components\\\\ImageLoader.js\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'; // Constants\n\nimport { BASE_IMG_URL } from '../constants/constants'; // Material Components\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n  card: {\n    maxWidth: 345,\n    minHeight: '100%',\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flex: '1 1 100%'\n    }\n  },\n  media: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover',\n    margin: \"auto\"\n  },\n  progress: {\n    margin: theme.spacing(2)\n  }\n});\n\nconst _loaded = {};\n\nclass ItemImageLoader extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loaded: _loaded[this.props.src]\n    };\n\n    this.onLoad = () => {\n      _loaded[this.props.src] = true;\n      this.setState(() => ({\n        loaded: true\n      }));\n    };\n  }\n\n  render() {\n    let _this$props = this.props,\n        classNames = _this$props.classNames,\n        loadedClassName = _this$props.loadedClassName,\n        loadingClassName = _this$props.loadingClassName,\n        classes = _this$props.classes,\n        data = _this$props.data,\n        props = _objectWithoutProperties(_this$props, [\"classNames\", \"loadedClassName\", \"loadingClassName\", \"classes\", \"data\"]);\n\n    classNames = \"\".concat(classes.media, \" \").concat(this.state.loaded ? loadedClassName : loadingClassName);\n    const LoadImage = React.createElement(CardMedia, {\n      component: \"img\",\n      className: classNames,\n      onLoad: this.onLoad,\n      height: \"auto\",\n      image: data.img && BASE_IMG_URL + data.img,\n      title: data.title,\n      \"alt-title\": data.title,\n      loading: \"lazy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    });\n    const LoadProgress = React.createElement(CircularProgress, {\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    });\n    const HandleLoad = this.state.loaded ? LoadImage : LoadProgress;\n    return HandleLoad;\n    /*return (\r\n      <React.Fragment>\r\n        {this.state.loaded\r\n          ? <CardMedia\r\n              component=\"img\"\r\n              className={classNames} \r\n              onLoad={this.onLoad}\r\n              height=\"auto\"\r\n              image={data.img && ( BASE_IMG_URL+data.img )}\r\n              title={data.title}\r\n              alt-title={data.title}\r\n              loading=\"lazy\"\r\n            />\r\n          : <CircularProgress className={classes.progress} />}\r\n          {this.state.loaded ? console.log('loaded') : console.log('loading')}\r\n      </React.Fragment>\r\n    )*/\n  }\n\n}\n\nItemImageLoader.defaultProps = {\n  loadingClassName: \"img-loading\",\n  loadedClassName: \"img-loaded\"\n};\nItemImageLoader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ItemImageLoader);","map":{"version":3,"sources":["C:\\Users\\XPS-User\\Desktop\\Nathan\\Temp\\Apps\\getyourprayerbeads\\src\\components\\ImageLoader.js"],"names":["React","PropTypes","withStyles","BASE_IMG_URL","CardMedia","CircularProgress","styles","theme","card","maxWidth","minHeight","display","flexWrap","flex","media","objectFit","margin","progress","spacing","_loaded","ItemImageLoader","Component","state","loaded","props","src","onLoad","setState","render","classNames","loadedClassName","loadingClassName","classes","data","LoadImage","img","title","LoadProgress","HandleLoad","defaultProps","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// Constants\r\nimport { BASE_IMG_URL } from '../constants/constants';\r\n// Material Components\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    maxWidth: 345,\r\n    minHeight: '100%',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      flex: '1 1 100%',\r\n    }\r\n  },\r\n  media: {\r\n    // ⚠️ object-fit is not supported by IE 11.\r\n    objectFit: 'cover',\r\n    margin: `auto`,\r\n  },\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n  },\r\n});\r\n\r\nconst _loaded = {};\r\n\r\nclass ItemImageLoader extends React.Component {\r\n  \r\n  //initial state: image loaded stage \r\n  state = {\r\n    loaded: _loaded[this.props.src]\r\n  };\r\n\r\n  //define our loading and loaded image classes\r\n  static defaultProps = {\r\n    loadingClassName: \"img-loading\",\r\n    loadedClassName: \"img-loaded\"\r\n  };\r\n\r\n  //image onLoad handler to update state to loaded\r\n  onLoad = () => {\r\n    _loaded[this.props.src] = true;\r\n    this.setState(() => ({ loaded: true }));\r\n  };\r\n\r\n  render() {\r\n  \r\n    let { classNames, loadedClassName, loadingClassName, classes, data, ...props } = this.props;\r\n\r\n    classNames = `${classes.media} ${this.state.loaded\r\n      ? loadedClassName\r\n      : loadingClassName}`;\r\n\r\n    const LoadImage = <CardMedia\r\n                  component=\"img\"\r\n                  className={classNames} \r\n                  onLoad={this.onLoad}\r\n                  height=\"auto\"\r\n                  image={data.img && ( BASE_IMG_URL+data.img )}\r\n                  title={data.title}\r\n                  alt-title={data.title}\r\n                  loading=\"lazy\"\r\n                />;\r\n\r\n    const LoadProgress = <CircularProgress className={classes.progress} />;\r\n\r\n    const HandleLoad = this.state.loaded ? LoadImage : LoadProgress;\r\n\r\n    return HandleLoad;\r\n\r\n    /*return (\r\n      <React.Fragment>\r\n        {this.state.loaded\r\n          ? <CardMedia\r\n              component=\"img\"\r\n              className={classNames} \r\n              onLoad={this.onLoad}\r\n              height=\"auto\"\r\n              image={data.img && ( BASE_IMG_URL+data.img )}\r\n              title={data.title}\r\n              alt-title={data.title}\r\n              loading=\"lazy\"\r\n            />\r\n          : <CircularProgress className={classes.progress} />}\r\n          {this.state.loaded ? console.log('loaded') : console.log('loading')}\r\n      </React.Fragment>\r\n    )*/\r\n  }\r\n}\r\n\r\nItemImageLoader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ItemImageLoader);"]},"metadata":{},"sourceType":"module"}