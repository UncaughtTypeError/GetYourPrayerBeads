{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\src\\\\components\\\\Header.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'; // Material Components\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  AppBar: {\n    padding: '5px 0'\n  }\n};\n\nclass MenuAppBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      theme: true\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        theme: event.target.checked\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const theme = this.state.theme;\n    const logo = '/assets/images/prayerbeads-white.png';\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      position: \"fixed\",\n      color: \"inherit\",\n      className: classes.AppBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h3\",\n      inline: true,\n      color: \"inherit\",\n      align: \"left\",\n      className: classes.grow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Get Your Prayer Beads \", React.createElement(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      width: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"And other things...\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Tooltip, {\n        title: theme ? 'Light Theme' : 'Dark Theme',\n        placement: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        checked: theme,\n        onChange: this.handleChange,\n        \"aria-label\": theme ? 'Light Theme' : 'Dark Theme',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(InvertColorsIcon, {\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nMenuAppBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MenuAppBar);","map":{"version":3,"sources":["C:\\Users\\XPS-User\\Desktop\\Nathan\\Temp\\Apps\\getyourprayerbeads\\src\\components\\Header.js"],"names":["React","PropTypes","withStyles","AppBar","Toolbar","Typography","InvertColorsIcon","IconButton","FormControlLabel","FormGroup","Tooltip","styles","root","flexGrow","grow","padding","MenuAppBar","Component","state","theme","handleChange","event","setState","target","checked","render","classes","props","logo","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// Material Components\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  AppBar: {\r\n    padding: '5px 0',\r\n  }\r\n};\r\n\r\nclass MenuAppBar extends React.Component {\r\n  state = {\r\n    theme: true,\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ theme: event.target.checked });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { theme } = this.state;\r\n    const logo = '/assets/images/prayerbeads-white.png';\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"fixed\" color=\"inherit\" className={classes.AppBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h3\" inline={true} color=\"inherit\" align=\"left\" className={classes.grow}>\r\n              Get Your Prayer Beads <img src={logo} alt=\"logo\" width=\"50\" />\r\n              <Typography variant=\"subtitle2\"><em>And other things...</em></Typography>\r\n            </Typography>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={\r\n                  <Tooltip title={theme ? 'Light Theme' : 'Dark Theme'} placement=\"right\">\r\n                    <IconButton checked={theme} onChange={this.handleChange} aria-label={theme ? 'Light Theme' : 'Dark Theme'}>\r\n                      <InvertColorsIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                }\r\n              />\r\n            </FormGroup>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMenuAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MenuAppBar);\r\n"]},"metadata":{},"sourceType":"module"}