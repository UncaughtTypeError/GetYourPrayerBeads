{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\src\\\\components\\\\Filters.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'; // Material Components\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst styles = theme => ({\n  root: {\n    width: '100%'\n  }\n});\n\nconst filters = dataFilters => {\n  return dataFilters.map(filter => filter);\n};\n\nclass Filters extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = filters(this.props.dataFilters);\n  }\n\n  render() {\n    const dataFilters = this.props.dataFilters;\n    const display = this.state.display;\n    return React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, dataFilters.map(filter => React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: display,\n        onChange: event => this.setState({\n          display: event.target.checked\n        }),\n        value: filter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }),\n      label: filter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })));\n  }\n\n}\n\nFilters.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Filters);","map":{"version":3,"sources":["C:\\Users\\XPS-User\\Desktop\\Nathan\\Temp\\Apps\\getyourprayerbeads\\src\\components\\Filters.js"],"names":["React","PropTypes","withStyles","FormGroup","FormControlLabel","Checkbox","styles","theme","root","width","filters","dataFilters","map","filter","Filters","Component","state","props","render","display","event","setState","target","checked","propTypes","classes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AADiB,CAAL,CAApB;;AAMA,MAAMC,OAAO,GAAIC,WAAD,IAAiB;AAC/B,SACEA,WAAW,CAACC,GAAZ,CAAgBC,MAAM,IACpBA,MADF,CADF;AAKD,CAND;;AAQA,MAAMC,OAAN,SAAsBd,KAAK,CAACe,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5BN,OAAO,CAAC,KAAKO,KAAL,CAAWN,WAAZ,CAFqB;AAAA;;AAIpCO,EAAAA,MAAM,GAAG;AAAA,UAECP,WAFD,GAEiB,KAAKM,KAFtB,CAECN,WAFD;AAAA,UAGCQ,OAHD,GAGa,KAAKH,KAHlB,CAGCG,OAHD;AAKP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,WAAW,CAACC,GAAZ,CAAgBC,MAAM,IACrB,oBAAC,gBAAD;AACE,MAAA,OAAO,EACL,oBAAC,QAAD;AACE,QAAA,OAAO,EAAEM,OADX;AAEE,QAAA,QAAQ,EAAEC,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAEF,UAAAA,OAAO,EAAEC,KAAK,CAACE,MAAN,CAAaC;AAAxB,SAAd,CAFrB;AAGE,QAAA,KAAK,EAAEV,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAQE,MAAA,KAAK,EAAEA,MART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAgBD;;AAzBmC;;AA6BtCC,OAAO,CAACU,SAAR,GAAoB;AAClBC,EAAAA,OAAO,EAAExB,SAAS,CAACyB,MAAV,CAAiBC;AADR,CAApB;AAIA,eAAezB,UAAU,CAACI,MAAD,CAAV,CAAmBQ,OAAnB,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// Material Components\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nconst filters = (dataFilters) => {\r\n  return (\r\n    dataFilters.map(filter => (\r\n      filter: true\r\n    ))\r\n  )\r\n}\r\n\r\nclass Filters extends React.Component {\r\n\r\n  state = filters(this.props.dataFilters);\r\n\r\n  render() {\r\n\r\n    const { dataFilters } = this.props;\r\n    const { display } = this.state;\r\n\r\n    return (\r\n      <FormGroup>\r\n        {dataFilters.map(filter => (\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={display}\r\n                onChange={event => this.setState({ display: event.target.checked })}\r\n                value={filter}\r\n              />\r\n            }\r\n            label={filter}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nFilters.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Filters);"]},"metadata":{},"sourceType":"module"}