{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\src\\\\components\\\\Filters.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'; // Material Components\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n  formGroup: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('sm')]: {\n      justifyContent: 'space-around'\n    }\n  },\n  formWrap: {\n    padding: '15px',\n    margin: '10px 15px'\n  }\n});\n\nconst defaultContextData = {\n  filters: [{\n    id: 1,\n    val: \"All\",\n    active: true\n  }]\n};\nconst FilterContext = React.createContext(defaultContextData);\n\nconst useFilters = () => React.useContext(FilterContext);\n\nconst useEffectFilters = () => {\n  const _React$useState = React.useState({\n    filters: FilterContext,\n    hasThemeMounted: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        filtersState = _React$useState2[0],\n        setFiltersState = _React$useState2[1];\n\n  React.useEffect(() => {\n    setFiltersState(_objectSpread({}, filtersState, {\n      hasThemeMounted: true\n    }));\n  }, [filtersState]);\n  return [filtersState, setFiltersState];\n};\n\nconst FiltersProvider = props => {\n  //filters(this.props.dataFilters, this.state);\n  const classes = props.classes,\n        dataFilters = props.dataFilters,\n        children = props.children; //const { display } = this.state;\n  // state = filters(this.props.dataFilters);\n  // state = {...this.props.dataFilters};\n  //render() {\n  //localStorage.setItem(\"Filter\", 'All');\n\n  const initialFilters = () => {\n    return dataFilters.map(filter => //this.setState({ filter: false })\n    filter);\n  };\n\n  const _React$useState3 = React.useState(initialFilters),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        filters = _React$useState4[0],\n        setFilters = _React$useState4[1];\n\n  const _useEffectFilters = useEffectFilters(),\n        _useEffectFilters2 = _slicedToArray(_useEffectFilters, 2),\n        filtersState = _useEffectFilters2[0],\n        setFiltersState = _useEffectFilters2[1];\n\n  if (!filtersState.hasThemeMounted) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n  } //const [task, setActiveFilters] = useState('');\n\n  /*const filter = (val) => {\r\n    localStorage.setItem(\"Filter\", val);\r\n      const bool = localStorage.getItem(\"Filter\") === \"true\";\r\n      const current = localStorage.getItem(\"Filter\");\r\n      console.log(val);\r\n      console.log(bool, current);\r\n  }*/\n\n\n  const handleChangeCheckbox = (id, val, event) => {\n    setFilters(filters.map(filter => {\n      if (filter.id === id) {\n        return _objectSpread({}, filter, {\n          active: !filter.active\n        });\n      } else {\n        return filter;\n      }\n    }));\n\n    if (val) {\n      setFilters(filters.concat({\n        id: id,\n        val,\n        active: false\n      }));\n    }\n\n    localStorage.getItem(id) ? localStorage.removeItem(id) : localStorage.setItem(id, val); //setActiveFilters(event);\n\n    console.log('event', event);\n    setFiltersState(filters.concat(_objectSpread({}, filtersState, {\n      id: id,\n      val,\n      active: false\n    })));\n  };\n\n  return React.createElement(FilterContext.Provider, {\n    value: {\n      filters: filtersState.filters\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Paper\n  /* className={classes.formWrap} */\n  , {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(FormGroup\n  /* className={classes.formGroup} */\n  , {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, dataFilters.map(filter => React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox //checked={this.state.display}\n    //onChange={event => this.setState({ display: event.target.checked })}\n    //value={this.state.display}\n    , {\n      id: filter.id,\n      value: filter.val,\n      color: \"primary\",\n      checked: localStorage.getItem(filter.id) ? true : false,\n      onChange: event => handleChangeCheckbox(filter.id, filter.val, event.target.checked) //onChange={event => console.log('test:',event.target.checked)}\n      ,\n      test: localStorage.getItem(filter.id) ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }),\n    label: filter.val,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })))), children); //}\n};\n\nFiltersProvider.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)({\n  FiltersProvider\n});\nexport { FiltersProvider, useFilters };","map":{"version":3,"sources":["C:\\Users\\XPS-User\\Desktop\\Nathan\\Temp\\Apps\\getyourprayerbeads\\src\\components\\Filters.js"],"names":["React","PropTypes","withStyles","FormGroup","FormControlLabel","Checkbox","Paper","styles","theme","formGroup","flexDirection","justifyContent","breakpoints","down","formWrap","padding","margin","defaultContextData","filters","id","val","active","FilterContext","createContext","useFilters","useContext","useEffectFilters","useState","hasThemeMounted","filtersState","setFiltersState","useEffect","FiltersProvider","props","classes","dataFilters","children","initialFilters","map","filter","setFilters","handleChangeCheckbox","event","concat","localStorage","getItem","removeItem","setItem","console","log","target","checked","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// Material Components\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = theme => ({\r\n  formGroup: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    [theme.breakpoints.down('sm')]: {  \r\n      justifyContent: 'space-around',\r\n    },\r\n  },\r\n  formWrap: {\r\n    padding: '15px',\r\n    margin: '10px 15px',\r\n  },\r\n});\r\n\r\nconst defaultContextData = {\r\n  filters: [\r\n    { id: 1, val: `All`, active: true, }\r\n  ]\r\n};\r\n\r\nconst FilterContext = React.createContext(defaultContextData);\r\nconst useFilters = () => React.useContext(FilterContext);\r\n\r\nconst useEffectFilters = () => {\r\n  const [filtersState, setFiltersState] = React.useState({\r\n    filters: FilterContext,\r\n    hasThemeMounted: false\r\n  });\r\n  React.useEffect(() => {\r\n    setFiltersState({ ...filtersState, hasThemeMounted: true });\r\n  }, [filtersState]);\r\n\r\n  return [filtersState, setFiltersState];\r\n};\r\n\r\nconst FiltersProvider = (props) => {\r\n  \r\n  //filters(this.props.dataFilters, this.state);\r\n\r\n  const { classes, dataFilters, children } = props;\r\n  //const { display } = this.state;\r\n\r\n  // state = filters(this.props.dataFilters);\r\n  // state = {...this.props.dataFilters};\r\n\r\n  //render() {\r\n\r\n    //localStorage.setItem(\"Filter\", 'All');\r\n\r\n    const initialFilters = () => {\r\n      return (\r\n        dataFilters.map(filter => (\r\n          //this.setState({ filter: false })\r\n          filter\r\n        ))\r\n      )\r\n    }\r\n\r\n    const [filters, setFilters] = React.useState(initialFilters);\r\n    const [filtersState, setFiltersState] = useEffectFilters();\r\n  \r\n    if (!filtersState.hasThemeMounted) {\r\n      return <div />;\r\n    }\r\n    //const [task, setActiveFilters] = useState('');\r\n\r\n    /*const filter = (val) => {\r\n      localStorage.setItem(\"Filter\", val);\r\n        const bool = localStorage.getItem(\"Filter\") === \"true\";\r\n        const current = localStorage.getItem(\"Filter\");\r\n        console.log(val);\r\n        console.log(bool, current);\r\n    }*/\r\n\r\n    const handleChangeCheckbox = (id, val, event) => {\r\n      setFilters(\r\n        filters.map(filter => {\r\n          if (filter.id === id) {\r\n            return { ...filter, active: !filter.active };\r\n          } else {\r\n            return filter;\r\n          }\r\n        })\r\n      );\r\n      if (val) {\r\n        setFilters(filters.concat({ id: id, val, active: false }));\r\n      }\r\n      \r\n      localStorage.getItem(id) ? \r\n        localStorage.removeItem(id)\r\n        :\r\n        localStorage.setItem(id, val);\r\n\r\n      //setActiveFilters(event);\r\n      console.log('event',event);\r\n\r\n      setFiltersState(filters.concat({ ...filtersState, id: id, val, active: false }));\r\n    };\r\n\r\n    return (\r\n      <FilterContext.Provider\r\n        value={{\r\n          filters: filtersState.filters,\r\n        }}\r\n      >\r\n        <Paper /* className={classes.formWrap} */>\r\n          <FormGroup /* className={classes.formGroup} */>\r\n            {dataFilters.map(filter => (\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                  //checked={this.state.display}\r\n                  //onChange={event => this.setState({ display: event.target.checked })}\r\n                  //value={this.state.display}\r\n                    id={filter.id}\r\n                    value={filter.val}\r\n                    color=\"primary\"\r\n                    checked={localStorage.getItem(filter.id) ? true : false}\r\n                    onChange={(event) => handleChangeCheckbox(filter.id, filter.val, event.target.checked)}\r\n                    //onChange={event => console.log('test:',event.target.checked)}\r\n                    test={localStorage.getItem(filter.id) ? true : false}\r\n                  />\r\n                }\r\n                label={filter.val}\r\n              />\r\n            ))}\r\n          </FormGroup>\r\n        </Paper>\r\n          {children}\r\n      </FilterContext.Provider>\r\n    )\r\n  //}\r\n\r\n}\r\n\r\nFiltersProvider.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)({ FiltersProvider });\r\nexport { FiltersProvider, useFilters };"]},"metadata":{},"sourceType":"module"}