{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\src\\\\theme\\\\ThemeSwitcher.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'; // Components\n\nimport { useTheme } from \"./ThemeContext\"; // Material Components\n\nimport IconButton from '@material-ui/core/IconButton';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst styles = {\n  root: {\n    width: '100%'\n  }\n};\n\nconst ThemeSwitcher = () => {\n  const themeState = useTheme();\n  let alternateTheme = localStorage.getItem(\"Inactive Theme\");\n  return React.createElement(Tooltip, {\n    title: alternateTheme,\n    placement: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": alternateTheme,\n    onClick: () => themeState.toggle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(InvertColorsIcon, {\n    fontSize: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n};\n\nThemeSwitcher.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ThemeSwitcher);","map":{"version":3,"sources":["C:\\Users\\XPS-User\\Desktop\\Nathan\\Temp\\Apps\\getyourprayerbeads\\src\\theme\\ThemeSwitcher.js"],"names":["React","PropTypes","withStyles","useTheme","IconButton","InvertColorsIcon","Tooltip","styles","root","width","ThemeSwitcher","themeState","alternateTheme","localStorage","getItem","toggle","propTypes","classes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;;AACA,SAASC,QAAT,QAAyB,gBAAzB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AADO,CAAf;;AAMA,MAAMC,aAAa,GAAG,MAAM;AAE1B,QAAMC,UAAU,GAAGR,QAAQ,EAA3B;AAEA,MAAIS,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAArB;AAEA,SACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEF,cAAhB;AAAgC,IAAA,SAAS,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,kBAAYA,cAAxB;AAAwC,IAAA,OAAO,EAAE,MAAMD,UAAU,CAACI,MAAX,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAQD,CAdD;;AAgBAL,aAAa,CAACM,SAAd,GAA0B;AACxBC,EAAAA,OAAO,EAAEhB,SAAS,CAACiB,MAAV,CAAiBC;AADF,CAA1B;AAIA,eAAejB,UAAU,CAACK,MAAD,CAAV,CAAmBG,aAAnB,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// Components\r\nimport { useTheme } from \"./ThemeContext\";\r\n// Material Components\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n  }\r\n};\r\n\r\nconst ThemeSwitcher = () => {\r\n\r\n  const themeState = useTheme();\r\n\r\n  let alternateTheme = localStorage.getItem(\"Inactive Theme\");\r\n\r\n  return (\r\n    <Tooltip title={alternateTheme} placement=\"left\">\r\n      <IconButton aria-label={alternateTheme} onClick={() => themeState.toggle()}>\r\n        <InvertColorsIcon fontSize=\"small\" />\r\n      </IconButton>\r\n    </Tooltip>\r\n  )\r\n\r\n}\r\n\r\nThemeSwitcher.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ThemeSwitcher);"]},"metadata":{},"sourceType":"module"}