{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\src\\\\components\\\\Header.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'; // Components\n\nimport HeaderNav from './HeaderNav'; // Material Components\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  AppBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: \"calc(100% - \".concat(drawerWidth, \"px)\")\n    },\n    padding: '5px 0',\n    '& .header-icon': {\n      verticalAlign: 'middle'\n    }\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: \"calc(100% - \".concat(drawerWidth, \"px)\")\n    }\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  }\n});\n\nclass MenuAppBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mobileOpen: false,\n      isdark: this.props.isdark\n    };\n\n    this.toggleDark = (event, isdark) => {\n      let toggleDark = this.state.isdark ? false : true;\n      this.setState({\n        isdark: toggleDark\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme;\n    const isdark = this.state.isdark;\n    const logo = '/assets/images/prayer-bead.png';\n    const drawer = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(HeaderNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      position: \"fixed\",\n      color: \"inherit\",\n      className: classes.AppBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h3\",\n      inline: true,\n      color: \"inherit\",\n      align: \"left\",\n      className: classes.grow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Get Your Prayer Beads \", React.createElement(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      width: \"50\",\n      className: \"header-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"And other things...\"))), React.createElement(Tooltip, {\n      title: isdark ? 'Light Theme' : 'Dark Theme',\n      placement: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": isdark ? 'Light Theme' : 'Dark Theme',\n      onClick: this.toggleDark,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(InvertColorsIcon, {\n      fontSize: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))), React.createElement(IconButton, {\n      className: classes.menuButton,\n      color: \"inherit\",\n      \"aria-label\": \"Open drawer\",\n      onClick: this.handleDrawerToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })))), React.createElement(\"nav\", {\n      className: classes.drawer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Hidden, {\n      smUp: true,\n      implementation: \"css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      container: this.props.container,\n      variant: \"temporary\",\n      anchor: theme.direction === 'rtl' ? 'right' : 'left',\n      open: this.state.mobileOpen,\n      onClose: this.handleDrawerToggle,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, drawer)), React.createElement(Hidden, {\n      xsDown: true,\n      implementation: \"css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      classes: {\n        paper: classes.drawerPaper\n      },\n      variant: \"permanent\",\n      open: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, drawer))));\n  }\n\n}\n\nMenuAppBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(MenuAppBar);","map":{"version":3,"sources":["C:\\Users\\XPS-User\\Desktop\\Nathan\\Temp\\Apps\\getyourprayerbeads\\src\\components\\Header.js"],"names":["React","PropTypes","withStyles","HeaderNav","AppBar","Toolbar","Drawer","Hidden","Divider","Typography","InvertColorsIcon","IconButton","MenuIcon","Tooltip","drawerWidth","styles","theme","root","flexGrow","grow","marginLeft","breakpoints","up","width","padding","verticalAlign","drawer","flexShrink","appBar","menuButton","marginRight","display","toolbar","mixins","drawerPaper","MenuAppBar","Component","state","mobileOpen","isdark","props","toggleDark","event","setState","render","classes","logo","handleDrawerToggle","container","direction","paper","propTypes","object","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// Components\r\nimport HeaderNav from './HeaderNav';\r\n// Material Components\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  AppBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n    padding: '5px 0',\r\n    '& .header-icon': {\r\n      verticalAlign: 'middle',\r\n    }\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: 20,\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n});\r\n\r\nclass MenuAppBar extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n    isdark: this.props.isdark,\r\n  };\r\n\r\n  toggleDark = (event, isdark) => {\r\n    let toggleDark = this.state.isdark ? false : true;\r\n    this.setState({ isdark: toggleDark });\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    const isdark = this.state.isdark;\r\n    const logo = '/assets/images/prayer-bead.png';\r\n\r\n    const drawer = (\r\n      <div>\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <HeaderNav />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"fixed\" color=\"inherit\" className={classes.AppBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h3\" inline={true} color=\"inherit\" align=\"left\" className={classes.grow}>\r\n              Get Your Prayer Beads <img src={logo} alt=\"logo\" width=\"50\" className=\"header-icon\" />\r\n              <Typography variant=\"subtitle2\"><em>And other things...</em></Typography>\r\n            </Typography>\r\n            <Tooltip title={isdark ? 'Light Theme' : 'Dark Theme'} placement=\"right\">\r\n              <IconButton aria-label={isdark ? 'Light Theme' : 'Dark Theme'} onClick={this.toggleDark}>\r\n                <InvertColorsIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <IconButton \r\n              className={classes.menuButton} \r\n              color=\"inherit\" \r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerToggle}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer}>\r\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n          <Hidden smUp implementation=\"css\">\r\n            <Drawer\r\n              container={this.props.container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n              open={this.state.mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMenuAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(MenuAppBar);\r\n"]},"metadata":{},"sourceType":"module"}