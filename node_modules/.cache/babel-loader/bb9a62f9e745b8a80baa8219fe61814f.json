{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\src\\\\components\\\\Filters.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'; // Material Components\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n  formGroup: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('sm')]: {\n      justifyContent: 'space-around'\n    }\n  },\n  formWrap: {\n    padding: '15px',\n    margin: '10px 15px'\n  }\n});\n\nconst Filters = props => {\n  //filters(this.props.dataFilters, this.state);\n  const classes = props.classes,\n        dataFilters = props.dataFilters; //const { display } = this.state;\n  // state = filters(this.props.dataFilters);\n  // state = {...this.props.dataFilters};\n  //render() {\n\n  localStorage.setItem(\"Filter\", 'All');\n\n  const initialFilters = () => {\n    return dataFilters.map(filter => //this.setState({ filter: false })\n    filter);\n  };\n\n  const _useState = useState(initialFilters),\n        _useState2 = _slicedToArray(_useState, 2),\n        filters = _useState2[0],\n        setFilters = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        task = _useState4[0],\n        setActiveFilters = _useState4[1];\n\n  const filter = val => {\n    localStorage.setItem(\"Filter\", val);\n    const bool = localStorage.getItem(\"Filter\") === \"true\";\n    const current = localStorage.getItem(\"Filter\");\n    console.log(val);\n    console.log(bool, current);\n  };\n\n  const handleChangeCheckbox = (id, val, event) => {\n    setFilters(filters.map(filter => {\n      if (filter.id === id) {\n        return _objectSpread({}, filter, {\n          active: !filter.active\n        });\n      } else {\n        return filter;\n      }\n    }));\n\n    if (val) {\n      setFilters(filters.concat({\n        id: id,\n        val,\n        active: false\n      }));\n    }\n\n    setActiveFilters(event.target.value);\n    console.log('event', event);\n  };\n\n  return React.createElement(Paper, {\n    className: classes.formWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    className: classes.formGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, dataFilters.map(filter => React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox //checked={this.state.display}\n    //onChange={event => this.setState({ display: event.target.checked })}\n    //value={this.state.display}\n    , {\n      id: filter.id,\n      value: filter.val,\n      color: \"primary\",\n      checked: filter.active,\n      onChange: event => handleChangeCheckbox(filter.id, event) //onChange={event => console.log('test:',event.target.checked)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }),\n    label: filter.val,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })))); //}\n};\n\nFilters.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Filters);","map":{"version":3,"sources":["C:\\Users\\XPS-User\\Desktop\\Nathan\\Temp\\Apps\\getyourprayerbeads\\src\\components\\Filters.js"],"names":["React","useState","PropTypes","withStyles","FormGroup","FormControlLabel","Checkbox","Paper","styles","theme","formGroup","flexDirection","justifyContent","breakpoints","down","formWrap","padding","margin","Filters","props","classes","dataFilters","localStorage","setItem","initialFilters","map","filter","filters","setFilters","task","setActiveFilters","val","bool","getItem","current","console","log","handleChangeCheckbox","id","event","active","concat","target","value","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// Material Components\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = theme => ({\r\n  formGroup: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    [theme.breakpoints.down('sm')]: {  \r\n      justifyContent: 'space-around',\r\n    },\r\n  },\r\n  formWrap: {\r\n    padding: '15px',\r\n    margin: '10px 15px',\r\n  },\r\n});\r\n\r\nconst Filters = (props) => {\r\n  \r\n  //filters(this.props.dataFilters, this.state);\r\n\r\n  const { classes, dataFilters } = props;\r\n  //const { display } = this.state;\r\n\r\n  // state = filters(this.props.dataFilters);\r\n  // state = {...this.props.dataFilters};\r\n\r\n  //render() {\r\n\r\n    localStorage.setItem(\"Filter\", 'All');\r\n\r\n    const initialFilters = () => {\r\n      return (\r\n        dataFilters.map(filter => (\r\n          //this.setState({ filter: false })\r\n          filter\r\n        ))\r\n      )\r\n    }\r\n\r\n    const [filters, setFilters] = useState(initialFilters);\r\n    const [task, setActiveFilters] = useState('');\r\n\r\n    const filter = (val) => {\r\n      localStorage.setItem(\"Filter\", val);\r\n        const bool = localStorage.getItem(\"Filter\") === \"true\";\r\n        const current = localStorage.getItem(\"Filter\");\r\n        console.log(val);\r\n        console.log(bool, current);\r\n    }\r\n\r\n    const handleChangeCheckbox = (id, val, event) => {\r\n      setFilters(\r\n        filters.map(filter => {\r\n          if (filter.id === id) {\r\n            return { ...filter, active: !filter.active };\r\n          } else {\r\n            return filter;\r\n          }\r\n        })\r\n      );\r\n      if (val) {\r\n        setFilters(filters.concat({ id: id, val, active: false }));\r\n      }\r\n      setActiveFilters(event.target.value);\r\n      console.log('event',event);\r\n    };\r\n\r\n    return (\r\n      <Paper className={classes.formWrap}>\r\n        <FormGroup className={classes.formGroup}>\r\n          {dataFilters.map(filter => (\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                //checked={this.state.display}\r\n                //onChange={event => this.setState({ display: event.target.checked })}\r\n                //value={this.state.display}\r\n                  id={filter.id}\r\n                  value={filter.val}\r\n                  color=\"primary\"\r\n                  checked={filter.active}\r\n                  onChange={(event) => handleChangeCheckbox(filter.id, event)}\r\n                  //onChange={event => console.log('test:',event.target.checked)}\r\n                />\r\n              }\r\n              label={filter.val}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </Paper>\r\n    )\r\n  //}\r\n\r\n}\r\n\r\nFilters.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Filters);"]},"metadata":{},"sourceType":"module"}