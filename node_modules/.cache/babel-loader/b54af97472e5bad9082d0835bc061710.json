{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\src\\\\components\\\\LocationDetails.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'; // Material Components\n\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Chip from '@material-ui/core/Chip';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst styles = theme => ({\n  root: {\n    width: '100%'\n  },\n  listText: {\n    padding: \"0 16px\"\n  },\n  typoIndent: {\n    display: 'block',\n    paddingLeft: '72px'\n  },\n  typoAnno: {\n    display: 'block'\n  },\n  typoAnnoIcon: {\n    verticalAlign: 'middle',\n    marginRight: '5px'\n  }\n});\n\nconst TextChip = withStyles({\n  root: {\n    height: '22px',\n    width: '80px',\n    justifyContent: 'center',\n    marginRight: 16\n  },\n  label: {\n    paddingLeft: '8px',\n    paddingRight: '8px'\n  }\n})(Chip);\n\nfunction DetailList(props) {\n  const classes = props.classes,\n        data = props.data;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    disableGutters: true,\n    divider: true,\n    dense: true,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    className: classes.listText,\n    primary: data.title,\n    secondary: data.location,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), data.procurement && React.createElement(Typography, {\n    gutterBottom: false,\n    variant: \"body2\",\n    component: \"h6\",\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(TextChip, {\n    label: data.procurement,\n    className: classes.textChipBadge,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(MoreVertIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))));\n  /*return (\r\n    <List \r\n      className={classes.root}\r\n      title={data.title}\r\n      location={data.location}\r\n      description={data.description}\r\n      procurement={data.procurement}\r\n    >\r\n      <Divider />\r\n      <ListItem>\r\n        {data.procurement && ( \r\n          <Tooltip title={data.procurement} placement=\"left\">\r\n            <Avatar>\r\n              {data.procurement === 'Rewarded' && (<NewReleasesIcon />)}\r\n              {data.procurement === 'Discovered' && (<SearchIcon />)}\r\n              {data.procurement === 'Purchased' && (<MonetizationOnIcon />)}\r\n            </Avatar>\r\n          </Tooltip>\r\n        )}\r\n        {data.img && ( <img src={BASE_IMG_URL+data.img} alt=\"logo\" width=\"50\" /> )}\r\n        <ListItemText className={classes.listText} primary={data.title} secondary={data.location} />\r\n      </ListItem>\r\n      <Typography className={classes.typoIndent} align=\"left\" variant=\"body2\" gutterBottom={false}>\r\n        {data.description}\r\n        {data.requirement && (\r\n            <Typography className={classes.typoAnno} align=\"left\" variant=\"caption\" gutterBottom={false} color=\"textSecondary\">\r\n              <WarningIcon className={classes.typoAnnoIcon} /> \r\n              {data.requirement}\r\n            </Typography>\r\n          )\r\n        }\r\n        {data.note && (\r\n            <Typography className={classes.typoAnno} align=\"left\" variant=\"caption\" gutterBottom={false} color=\"textSecondary\">\r\n              <InfoIcon className={classes.typoAnnoIcon} /> \r\n              {data.note}\r\n            </Typography>\r\n          )\r\n        }\r\n      </Typography>\r\n    </List>\r\n  );*/\n}\n\nDetailList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(DetailList);","map":{"version":3,"sources":["C:\\Users\\XPS-User\\Desktop\\Nathan\\Temp\\Apps\\getyourprayerbeads\\src\\components\\LocationDetails.js"],"names":["React","PropTypes","withStyles","Typography","Divider","Avatar","Tooltip","Chip","IconButton","MoreVertIcon","ListItem","ListItemText","NewReleasesIcon","SearchIcon","MonetizationOnIcon","WarningIcon","InfoIcon","styles","theme","root","width","listText","padding","typoIndent","display","paddingLeft","typoAnno","typoAnnoIcon","verticalAlign","marginRight","TextChip","height","justifyContent","label","paddingRight","DetailList","props","classes","data","title","location","procurement","textChipBadge","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// Material Components\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  listText: {\r\n    padding: `0 16px`,\r\n  },\r\n  typoIndent: {\r\n    display: 'block',\r\n    paddingLeft: '72px',\r\n  },\r\n  typoAnno: {\r\n    display: 'block',\r\n  },\r\n  typoAnnoIcon: {\r\n    verticalAlign: 'middle',\r\n    marginRight: '5px',\r\n  },\r\n});\r\n\r\nconst TextChip = withStyles({\r\n  root:  {\r\n    height: '22px',\r\n    width: '80px',\r\n    justifyContent: 'center',\r\n    marginRight: 16,\r\n  },\r\n  label: {\r\n    paddingLeft: '8px',\r\n    paddingRight: '8px',\r\n  }\r\n})(Chip);\r\n\r\nfunction DetailList(props) {\r\n  const { classes, data } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ListItem disableGutters={true} divider={true} dense={true} alignItems=\"center\">\r\n        <ListItemText className={classes.listText} primary={data.title} secondary={data.location} />\r\n        {data.procurement && ( \r\n          <Typography gutterBottom={false} variant=\"body2\" component=\"h6\" align=\"right\">\r\n            <TextChip label={data.procurement} className={classes.textChipBadge}></TextChip>\r\n          </Typography>\r\n        )}\r\n        <IconButton>\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n      </ListItem>\r\n    </React.Fragment>\r\n  );\r\n\r\n  /*return (\r\n    <List \r\n      className={classes.root}\r\n      title={data.title}\r\n      location={data.location}\r\n      description={data.description}\r\n      procurement={data.procurement}\r\n    >\r\n      <Divider />\r\n      <ListItem>\r\n        {data.procurement && ( \r\n          <Tooltip title={data.procurement} placement=\"left\">\r\n            <Avatar>\r\n              {data.procurement === 'Rewarded' && (<NewReleasesIcon />)}\r\n              {data.procurement === 'Discovered' && (<SearchIcon />)}\r\n              {data.procurement === 'Purchased' && (<MonetizationOnIcon />)}\r\n            </Avatar>\r\n          </Tooltip>\r\n        )}\r\n        {data.img && ( <img src={BASE_IMG_URL+data.img} alt=\"logo\" width=\"50\" /> )}\r\n        <ListItemText className={classes.listText} primary={data.title} secondary={data.location} />\r\n      </ListItem>\r\n      <Typography className={classes.typoIndent} align=\"left\" variant=\"body2\" gutterBottom={false}>\r\n        {data.description}\r\n        {data.requirement && (\r\n            <Typography className={classes.typoAnno} align=\"left\" variant=\"caption\" gutterBottom={false} color=\"textSecondary\">\r\n              <WarningIcon className={classes.typoAnnoIcon} /> \r\n              {data.requirement}\r\n            </Typography>\r\n          )\r\n        }\r\n        {data.note && (\r\n            <Typography className={classes.typoAnno} align=\"left\" variant=\"caption\" gutterBottom={false} color=\"textSecondary\">\r\n              <InfoIcon className={classes.typoAnnoIcon} /> \r\n              {data.note}\r\n            </Typography>\r\n          )\r\n        }\r\n      </Typography>\r\n    </List>\r\n  );*/\r\n}\r\n\r\nDetailList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DetailList);"]},"metadata":{},"sourceType":"module"}