{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\src\\\\components\\\\FiltersContext.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'; // Material Components\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel'; //import Filters from './Filters';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nconst defaultContextData = {\n  filters: [{\n    id: 1,\n    val: \"All\",\n    active: true\n  }]\n};\nconst FilterContext = React.createContext(defaultContextData);\n\nconst useFilters = () => React.useContext(FilterContext);\n\nconst useEffectFilters = () => {\n  const _React$useState = React.useState({\n    filters: FilterContext\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        filtersState = _React$useState2[0],\n        setFiltersState = _React$useState2[1];\n\n  React.useEffect(() => {\n    setFiltersState(_objectSpread({}, filtersState));\n  }, []);\n  return [filtersState, setFiltersState];\n};\n\nconst FiltersProvider = props => {\n  //filters(this.props.dataFilters, this.state);\n  const classes = props.classes,\n        dataFilters = props.dataFilters,\n        children = props.children; //const { display } = this.state;\n  // state = filters(this.props.dataFilters);\n  // state = {...this.props.dataFilters};\n  //render() {\n  //localStorage.setItem(\"Filter\", 'All');\n\n  const initialFilters = () => {\n    return dataFilters.map(filter => //this.setState({ filter: false })\n    filter);\n  };\n\n  const _React$useState3 = React.useState(initialFilters),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        filters = _React$useState4[0],\n        setFilters = _React$useState4[1];\n\n  const _React$useState5 = React.useState(true),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        allActive = _React$useState6[0],\n        setAllFilters = _React$useState6[1];\n\n  const _useEffectFilters = useEffectFilters(),\n        _useEffectFilters2 = _slicedToArray(_useEffectFilters, 2),\n        filtersState = _useEffectFilters2[0],\n        setFiltersState = _useEffectFilters2[1]; //const [task, setActiveFilters] = useState('');\n\n  /*const filter = (val) => {\r\n    localStorage.setItem(\"Filter\", val);\r\n      const bool = localStorage.getItem(\"Filter\") === \"true\";\r\n      const current = localStorage.getItem(\"Filter\");\r\n      console.log(val);\r\n      console.log(bool, current);\r\n  }*/\n\n\n  const handleChangeCheckbox = (id, val, event) => {\n    //resetFilters(event ? true : false);\n    setAllFilters(() => val === 'All' ? true : false);\n    setFilters(filters.map(filter => {\n      if (val === 'All') {\n        return _objectSpread({}, filter, {\n          active: true\n        });\n      } else if (filter.id === id) {\n        if (allActive) {\n          filters[0].active = false;\n        }\n\n        ;\n        filter.active = !filter.active; //return { ...filter, active: !filter.active };\n\n        return filter;\n      } else {\n        return filter;\n      }\n    }));\n    /*       if(val === 'All') { \r\n            resetFilters(event ? true : false);\r\n            setFilters(\r\n              filters.map(filter => {\r\n                if (allActive && filter.val === 'All') {\r\n                  return { ...filter, active: true };\r\n                } else if (filter.id === id) {\r\n                  return { ...filter, active: !filter.active };\r\n                }\r\n              })\r\n            )\r\n          } else {\r\n            resetFilters(false);\r\n            setFilters(\r\n              filters.map(filter => {\r\n                if (filter.id === id) {\r\n                  return { ...filter, active: !filter.active };\r\n                } else {\r\n                  return filter;\r\n                }\r\n              })\r\n            )\r\n          } */\n\n    /*localStorage.getItem(id) ? \r\n      localStorage.removeItem(id)\r\n      :\r\n      localStorage.setItem(id, val);*/\n    //setActiveFilters(event);\n\n    console.log('event', event); //setFiltersState(filters.concat({ ...filtersState, id: id, val, active: false }));\n  };\n\n  const FilterForm = withStyles(theme => ({\n    formGroup: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      [theme.breakpoints.down('sm')]: {\n        justifyContent: 'space-around'\n      }\n    },\n    formWrap: {\n      padding: '15px',\n      margin: '10px 15px'\n    }\n  }))(props => {\n    const classes = props.classes;\n    return React.createElement(Paper, {\n      className: classes.formWrap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: classes.formGroup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, filters.map(filter => React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        id: filter.id,\n        value: filter.val,\n        color: \"primary\",\n        checked: allActive ? true : filter.active,\n        onChange: event => handleChangeCheckbox(filter.id, filter.val, event.target.checked),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }),\n      label: filter.val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))));\n  });\n  return React.createElement(FilterContext.Provider, {\n    value: {\n      allActive: allActive,\n      filters: filters\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(FilterForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), children); //}\n};\n\nFiltersProvider.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport { FiltersProvider, useFilters };","map":{"version":3,"sources":["C:\\Users\\XPS-User\\Desktop\\Nathan\\Temp\\Apps\\getyourprayerbeads\\src\\components\\FiltersContext.js"],"names":["React","PropTypes","withStyles","FormGroup","FormControlLabel","Checkbox","Paper","defaultContextData","filters","id","val","active","FilterContext","createContext","useFilters","useContext","useEffectFilters","useState","filtersState","setFiltersState","useEffect","FiltersProvider","props","classes","dataFilters","children","initialFilters","map","filter","setFilters","allActive","setAllFilters","handleChangeCheckbox","event","console","log","FilterForm","theme","formGroup","flexDirection","justifyContent","breakpoints","down","formWrap","padding","margin","target","checked","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// Material Components\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n//import Filters from './Filters';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst defaultContextData = {\r\n  filters: [\r\n    { id: 1, val: `All`, active: true, }\r\n  ]\r\n};\r\n\r\nconst FilterContext = React.createContext(defaultContextData);\r\nconst useFilters = () => React.useContext(FilterContext);\r\n\r\nconst useEffectFilters = () => {\r\n  const [filtersState, setFiltersState] = React.useState({\r\n    filters: FilterContext\r\n  });\r\n  React.useEffect(() => {\r\n    setFiltersState({ ...filtersState });\r\n  }, []);\r\n\r\n  return [filtersState, setFiltersState];\r\n};\r\n\r\nconst FiltersProvider = (props) => {\r\n  \r\n  //filters(this.props.dataFilters, this.state);\r\n\r\n  const { classes, dataFilters, children } = props;\r\n  //const { display } = this.state;\r\n\r\n  // state = filters(this.props.dataFilters);\r\n  // state = {...this.props.dataFilters};\r\n\r\n  //render() {\r\n\r\n    //localStorage.setItem(\"Filter\", 'All');\r\n\r\n    const initialFilters = () => {\r\n      return (\r\n        dataFilters.map(filter => (\r\n          //this.setState({ filter: false })\r\n          filter\r\n        ))\r\n      )\r\n    }\r\n\r\n    const [filters, setFilters] = React.useState(initialFilters);\r\n    const [allActive, setAllFilters] = React.useState(true);\r\n\r\n    const [filtersState, setFiltersState] = useEffectFilters();\r\n    \r\n    //const [task, setActiveFilters] = useState('');\r\n\r\n    /*const filter = (val) => {\r\n      localStorage.setItem(\"Filter\", val);\r\n        const bool = localStorage.getItem(\"Filter\") === \"true\";\r\n        const current = localStorage.getItem(\"Filter\");\r\n        console.log(val);\r\n        console.log(bool, current);\r\n    }*/\r\n\r\n    const handleChangeCheckbox = (id, val, event) => {\r\n      //resetFilters(event ? true : false);\r\n      setAllFilters (() => val === 'All' ? true : false);\r\n      setFilters(\r\n        filters.map(filter => {\r\n          if (val === 'All') {\r\n            return { ...filter, active: true };\r\n          } else if (filter.id === id) {\r\n            if (allActive) { filters[0].active = false };\r\n            filter.active = !filter.active;\r\n            //return { ...filter, active: !filter.active };\r\n            return filter;\r\n          } else {\r\n            return filter;\r\n          }\r\n        })\r\n      )\r\n\r\n/*       if(val === 'All') { \r\n        resetFilters(event ? true : false);\r\n        setFilters(\r\n          filters.map(filter => {\r\n            if (allActive && filter.val === 'All') {\r\n              return { ...filter, active: true };\r\n            } else if (filter.id === id) {\r\n              return { ...filter, active: !filter.active };\r\n            }\r\n          })\r\n        )\r\n      } else {\r\n        resetFilters(false);\r\n        setFilters(\r\n          filters.map(filter => {\r\n            if (filter.id === id) {\r\n              return { ...filter, active: !filter.active };\r\n            } else {\r\n              return filter;\r\n            }\r\n          })\r\n        )\r\n      } */\r\n      \r\n      /*localStorage.getItem(id) ? \r\n        localStorage.removeItem(id)\r\n        :\r\n        localStorage.setItem(id, val);*/\r\n\r\n      //setActiveFilters(event);\r\n      console.log('event',event);\r\n\r\n      //setFiltersState(filters.concat({ ...filtersState, id: id, val, active: false }));\r\n    };\r\n\r\n    const FilterForm = withStyles(theme => ({\r\n      formGroup: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        [theme.breakpoints.down('sm')]: {  \r\n          justifyContent: 'space-around',\r\n        },\r\n      },\r\n      formWrap: {\r\n        padding: '15px',\r\n        margin: '10px 15px',\r\n      },\r\n    }))(props => {\r\n      const { classes } = props;\r\n      return (\r\n        <Paper className={classes.formWrap}>\r\n          <FormGroup className={classes.formGroup}>\r\n            {filters.map(filter => (\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    id={filter.id}\r\n                    value={filter.val}\r\n                    color=\"primary\"\r\n                    checked={allActive ? true : filter.active}\r\n                    onChange={(event) => handleChangeCheckbox(filter.id, filter.val, event.target.checked)}\r\n                  />\r\n                }\r\n                label={filter.val}\r\n              />\r\n            ))}\r\n          </FormGroup>\r\n        </Paper>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <FilterContext.Provider\r\n        value={{\r\n          allActive: allActive,\r\n          filters: filters,\r\n        }}\r\n      >\r\n      <FilterForm />\r\n          {children}\r\n      </FilterContext.Provider>\r\n    )\r\n  //}\r\n\r\n}\r\n\r\nFiltersProvider.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport { FiltersProvider, useFilters }"]},"metadata":{},"sourceType":"module"}