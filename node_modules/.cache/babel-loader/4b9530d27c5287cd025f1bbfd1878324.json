{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\src\\\\components\\\\Header.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'; // Components\n\nimport HeaderNav from './HeaderNav'; // Material Components\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  AppBar: {\n    padding: '5px 0',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    '& .header-icon': {\n      verticalAlign: 'middle'\n    }\n  },\n  appBarShift: {\n    width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: drawerWidth\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px'\n  }, theme.mixins.toolbar, {\n    justifyContent: 'flex-start'\n  }),\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginRight: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: 0\n  }\n});\n\nclass MenuAppBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      isdark: this.props.isdark\n    };\n\n    this.handleDrawerOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleDrawerClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.toggleDark = (event, isdark) => {\n      let toggleDark = this.state.isdark ? false : true;\n      this.setState({\n        isdark: toggleDark\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme;\n    const open = this.state.open;\n    const isdark = this.state.isdark;\n    const logo = '/assets/images/prayer-bead.png';\n    const drawer = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.drawerHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.handleDrawerClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, theme.direction === 'rtl' ? React.createElement(ChevronLeftIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }) : React.createElement(ChevronRightIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))), React.createElement(HeaderNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      position: \"fixed\",\n      color: \"inherit\",\n      className: classes.AppBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h3\",\n      inline: true,\n      color: \"inherit\",\n      align: \"left\",\n      className: classes.grow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Get Your Prayer Beads \", React.createElement(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      width: \"50\",\n      className: \"header-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"And other things...\"))), React.createElement(Tooltip, {\n      title: isdark ? 'Light Theme' : 'Dark Theme',\n      placement: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": isdark ? 'Light Theme' : 'Dark Theme',\n      onClick: this.toggleDark,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(InvertColorsIcon, {\n      fontSize: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }))), React.createElement(IconButton, {\n      className: classes.menuButton,\n      color: \"inherit\",\n      \"aria-label\": \"Open drawer\",\n      onClick: this.handleDrawerToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })))), React.createElement(\"nav\", {\n      className: classes.drawer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      variant: \"persistent\",\n      anchor: \"right\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, drawer)));\n  }\n\n}\n\nMenuAppBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(MenuAppBar);","map":{"version":3,"sources":["C:\\Users\\XPS-User\\Desktop\\Nathan\\Temp\\Apps\\getyourprayerbeads\\src\\components\\Header.js"],"names":["React","PropTypes","withStyles","HeaderNav","AppBar","Toolbar","Drawer","Typography","InvertColorsIcon","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","Tooltip","drawerWidth","styles","theme","root","display","flexGrow","grow","padding","transition","transitions","create","easing","sharp","duration","leavingScreen","verticalAlign","appBarShift","width","easeOut","enteringScreen","marginRight","menuButton","marginLeft","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","spacing","unit","contentShift","MenuAppBar","Component","state","open","isdark","props","handleDrawerOpen","setState","handleDrawerClose","toggleDark","event","render","classes","logo","direction","handleDrawerToggle","paper","propTypes","object","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// Components\r\nimport HeaderNav from './HeaderNav';\r\n// Material Components\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  AppBar: {\r\n    padding: '5px 0',\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    '& .header-icon': {\r\n      verticalAlign: 'middle',\r\n    }\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: drawerWidth,\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 20,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-start',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginRight: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: 0,\r\n  },\r\n});\r\n\r\nclass MenuAppBar extends React.Component {\r\n  state = {\r\n    open: false,\r\n    isdark: this.props.isdark,\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  toggleDark = (event, isdark) => {\r\n    let toggleDark = this.state.isdark ? false : true;\r\n    this.setState({ isdark: toggleDark });\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    const { open } = this.state;\r\n    const isdark = this.state.isdark;\r\n    const logo = '/assets/images/prayer-bead.png';\r\n\r\n    const drawer = (\r\n      <div>\r\n        <div className={classes.toolbar} />\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={this.handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <HeaderNav />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"fixed\" color=\"inherit\" className={classes.AppBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h3\" inline={true} color=\"inherit\" align=\"left\" className={classes.grow}>\r\n              Get Your Prayer Beads <img src={logo} alt=\"logo\" width=\"50\" className=\"header-icon\" />\r\n              <Typography variant=\"subtitle2\"><em>And other things...</em></Typography>\r\n            </Typography>\r\n            <Tooltip title={isdark ? 'Light Theme' : 'Dark Theme'} placement=\"right\">\r\n              <IconButton aria-label={isdark ? 'Light Theme' : 'Dark Theme'} onClick={this.toggleDark}>\r\n                <InvertColorsIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <IconButton \r\n              className={classes.menuButton} \r\n              color=\"inherit\" \r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerToggle}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer}>\r\n          <Drawer\r\n            variant=\"persistent\"\r\n            anchor=\"right\"\r\n            open={open}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMenuAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(MenuAppBar);\r\n"]},"metadata":{},"sourceType":"module"}