{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\src\\\\components\\\\FiltersContext.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'; // Material Components\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel'; //import Filters from './Filters';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nconst defaultContextData = {\n  filters: [{\n    id: 1,\n    val: \"All\",\n    active: true\n  }]\n};\nconst FilterContext = React.createContext(defaultContextData);\n\nconst useFilters = () => React.useContext(FilterContext);\n\nconst FiltersProvider = props => {\n  const dataFilters = props.dataFilters,\n        children = props.children;\n\n  const initialFilters = () => {\n    return dataFilters.map(filter => filter);\n  };\n\n  const _React$useState = React.useState(initialFilters),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        filters = _React$useState2[0],\n        setFilters = _React$useState2[1];\n\n  const _React$useState3 = React.useState(true),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        allActive = _React$useState4[0],\n        setAllFilters = _React$useState4[1];\n\n  const handleChangeCheckbox = (id, val, event) => {\n    setAllFilters(() => val === 'All' ? true : false);\n    setFilters(filters.map(filter => {\n      if (val === 'All') {\n        return _objectSpread({}, filter, {\n          active: true\n        });\n      } else if (filter.id === id) {\n        if (allActive) {\n          filters[0].active = false;\n        }\n\n        ;\n        filter.active = !filter.active;\n        return filter;\n      } else {\n        return filter;\n      }\n    }));\n  };\n\n  const FilterForm = withStyles(theme => ({\n    formGroup: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      [theme.breakpoints.down('sm')]: {\n        justifyContent: 'space-around'\n      }\n    },\n    formWrap: {\n      padding: '15px',\n      margin: '10px 15px'\n    }\n  }))(props => {\n    const classes = props.classes;\n    return React.createElement(Paper, {\n      className: classes.formWrap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: classes.formGroup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, filters.map(filter => React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        id: filter.id,\n        value: filter.val,\n        color: \"primary\",\n        checked: allActive ? true : filter.active,\n        onChange: event => handleChangeCheckbox(filter.id, filter.val, event.target.checked),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }),\n      label: filter.val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))));\n  });\n  return React.createElement(FilterContext.Provider, {\n    value: {\n      allActive: allActive,\n      filters: filters\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(FilterForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), children); //}\n};\n\nFiltersProvider.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport { FiltersProvider, useFilters };","map":{"version":3,"sources":["C:\\Users\\XPS-User\\Desktop\\Nathan\\Temp\\Apps\\getyourprayerbeads\\src\\components\\FiltersContext.js"],"names":["React","PropTypes","withStyles","FormGroup","FormControlLabel","Checkbox","Paper","defaultContextData","filters","id","val","active","FilterContext","createContext","useFilters","useContext","FiltersProvider","props","dataFilters","children","initialFilters","map","filter","useState","setFilters","allActive","setAllFilters","handleChangeCheckbox","event","FilterForm","theme","formGroup","flexDirection","justifyContent","breakpoints","down","formWrap","padding","margin","classes","target","checked","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// Material Components\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n//import Filters from './Filters';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst defaultContextData = {\r\n  filters: [\r\n    { id: 1, val: `All`, active: true, }\r\n  ]\r\n};\r\n\r\nconst FilterContext = React.createContext(defaultContextData);\r\nconst useFilters = () => React.useContext(FilterContext);\r\n\r\nconst FiltersProvider = (props) => {\r\n\r\n  const { dataFilters, children } = props;\r\n\r\n    const initialFilters = () => {\r\n      return (\r\n        dataFilters.map(filter => (filter))\r\n      )\r\n    }\r\n\r\n    const [filters, setFilters] = React.useState(initialFilters);\r\n    const [allActive, setAllFilters] = React.useState(true);\r\n\r\n    const handleChangeCheckbox = (id, val, event) => {\r\n      setAllFilters (() => val === 'All' ? true : false);\r\n      setFilters(\r\n        filters.map(filter => {\r\n          if (val === 'All') {\r\n            return { ...filter, active: true };\r\n          } else if (filter.id === id) {\r\n            if (allActive) { filters[0].active = false };\r\n            filter.active = !filter.active;\r\n            return filter;\r\n          } else {\r\n            return filter;\r\n          }\r\n        })\r\n      )\r\n    };\r\n\r\n    const FilterForm = withStyles(theme => ({\r\n      formGroup: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        [theme.breakpoints.down('sm')]: {  \r\n          justifyContent: 'space-around',\r\n        },\r\n      },\r\n      formWrap: {\r\n        padding: '15px',\r\n        margin: '10px 15px',\r\n      },\r\n    }))(props => {\r\n      const { classes } = props;\r\n      return (\r\n        <Paper className={classes.formWrap}>\r\n          <FormGroup className={classes.formGroup}>\r\n            {filters.map(filter => (\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    id={filter.id}\r\n                    value={filter.val}\r\n                    color=\"primary\"\r\n                    checked={allActive ? true : filter.active}\r\n                    onChange={(event) => handleChangeCheckbox(filter.id, filter.val, event.target.checked)}\r\n                  />\r\n                }\r\n                label={filter.val}\r\n              />\r\n            ))}\r\n          </FormGroup>\r\n        </Paper>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <FilterContext.Provider\r\n        value={{\r\n          allActive: allActive,\r\n          filters: filters,\r\n        }}\r\n      >\r\n        <FilterForm />\r\n        {children}\r\n      </FilterContext.Provider>\r\n    )\r\n  //}\r\n\r\n}\r\n\r\nFiltersProvider.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport { FiltersProvider, useFilters }"]},"metadata":{},"sourceType":"module"}