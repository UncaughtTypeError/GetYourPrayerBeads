{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\XPS-User\\\\Desktop\\\\Nathan\\\\Temp\\\\Apps\\\\getyourprayerbeads\\\\src\\\\components\\\\Locations.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'; // Constants\n\nimport { BASE_IMG_URL } from '../constants/constants'; // Material Components\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport List from '@material-ui/core/List';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'; // Components\n\nimport LocationDetails from './LocationDetails';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  card: {\n    minHeight: '100%'\n  },\n  cardTitle: {\n    padding: '16px',\n    flexDirection: 'row-reverse',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-start',\n    '& .MuiCardHeader-title': {\n      fontSize: 18\n    },\n    '& .MuiCardHeader-content': {\n      flex: '0 0 auto'\n    }\n  },\n  cardContent: {\n    padding: 0\n  },\n  media: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover',\n    margin: \"auto\"\n  },\n  griditem: {\n    padding: theme.spacing.unit * 2\n  },\n  listAnno: {\n    width: '100%',\n    '& li:last-of-type': {\n      border: 0\n    },\n    '& .MuiButton-text': {\n      margin: \"0 10px\"\n    }\n  }\n});\n\nconst CounterChip = withStyles({\n  root: {\n    marginLeft: '10px',\n    height: '22px'\n  },\n  label: {\n    paddingLeft: '8px',\n    paddingRight: '8px'\n  }\n})(Chip);\n\nfunction CardGrid(props) {\n  const classes = props.classes,\n        data = props.data,\n        dataGeneral = props.dataGeneral;\n\n  const titleChip = data => {\n    return data.location + React.createElement(CounterChip, {\n      label: data.count,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, data.map(region => React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    sm: 6,\n    className: classes.griditem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Card, {\n    key: region.id,\n    count: region.count,\n    location: region.location,\n    location_img: region.location_img,\n    locations: region.locations,\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    avatar: React.createElement(CounterChip, {\n      label: region.count,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }),\n    title: titleChip(region),\n    subheader: region.location_note && region.location_note,\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(CardMedia, {\n    component: \"img\",\n    className: classes.media,\n    height: \"auto\",\n    image: region.location_img && BASE_IMG_URL + region.location_img,\n    title: region.location,\n    \"alt-title\": region.location,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.cardContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: classes.listAnno,\n    disablePadding: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, region.locations.map(data => React.createElement(LocationDetails, {\n    data: data,\n    dataGeneral: dataGeneral,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })))))))));\n  /*return (\r\n    <div>\r\n      {data.map(region => (\r\n        <ExpansionPanel\r\n          key={region.id}\r\n          count={region.count}\r\n          location={region.location}\r\n          location_img={region.location_img}\r\n          locations={region.locations}\r\n          className={classes.root}\r\n        >\r\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography className={classes.heading}>\r\n              {region.location} \r\n              <CounterChip label={region.count}></CounterChip>\r\n            </Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails className={classes.expanPanDet}>\r\n            {region.location_img && (<img src={BASE_IMG_URL+region.location_img} alt={region.location} width='100%' />)}\r\n            {region.locations.map(data => (\r\n              <LocationDetails \r\n                data={data}\r\n              />\r\n            ))}\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      ))}\r\n    </div>\r\n  );*/\n}\n\nCardGrid.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CardGrid);","map":{"version":3,"sources":["C:\\Users\\XPS-User\\Desktop\\Nathan\\Temp\\Apps\\getyourprayerbeads\\src\\components\\Locations.js"],"names":["React","PropTypes","withStyles","BASE_IMG_URL","Grid","Typography","Chip","Card","CardHeader","CardContent","CardMedia","List","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","ExpandMoreIcon","LocationDetails","styles","theme","root","flexGrow","card","minHeight","cardTitle","padding","flexDirection","justifyContent","alignItems","fontSize","flex","cardContent","media","objectFit","margin","griditem","spacing","unit","listAnno","width","border","CounterChip","marginLeft","height","label","paddingLeft","paddingRight","CardGrid","props","classes","data","dataGeneral","titleChip","location","count","map","region","id","location_img","locations","location_note","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// Constants\r\nimport { BASE_IMG_URL } from '../constants/constants';\r\n// Material Components\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport List from '@material-ui/core/List';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// Components\r\nimport LocationDetails from './LocationDetails';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  card: {\r\n    minHeight: '100%',\r\n  },\r\n  cardTitle: {\r\n    padding: '16px',\r\n    flexDirection: 'row-reverse',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-start',\r\n    '& .MuiCardHeader-title': {\r\n      fontSize: 18,\r\n    },\r\n    '& .MuiCardHeader-content': {\r\n      flex: '0 0 auto',\r\n    }\r\n  },\r\n  cardContent: {\r\n    padding: 0,\r\n  },\r\n  media: {\r\n    // ⚠️ object-fit is not supported by IE 11.\r\n    objectFit: 'cover',\r\n    margin: `auto`,\r\n\r\n  },\r\n  griditem: {\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n  listAnno: {\r\n    width: '100%',\r\n    '& li:last-of-type': {\r\n      border: 0,\r\n    },\r\n    '& .MuiButton-text': {\r\n      margin: `0 10px`,\r\n    }\r\n  },\r\n});\r\n\r\nconst CounterChip = withStyles({\r\n  root:  {\r\n    marginLeft: '10px',\r\n    height: '22px',\r\n  },\r\n  label: {\r\n    paddingLeft: '8px',\r\n    paddingRight: '8px',\r\n  }\r\n})(Chip);\r\n\r\nfunction CardGrid(props) {\r\n  const { classes, data, dataGeneral } = props;\r\n  const titleChip = (data) => {\r\n    return data.location + (<CounterChip label={data.count}></CounterChip>);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container justify=\"center\" spacing={24}>\r\n        {data.map(region => (\r\n          <Grid item xs={3} sm={6} className={classes.griditem}>\r\n            <Card \r\n              key={region.id}\r\n              count={region.count}\r\n              location={region.location}\r\n              location_img={region.location_img}\r\n              locations={region.locations}\r\n              className={classes.card}\r\n            >\r\n              <CardHeader\r\n                avatar={\r\n                  <CounterChip label={region.count}></CounterChip>\r\n                }\r\n                title={titleChip(region)}\r\n                subheader={region.location_note && ( region.location_note )}\r\n                className={classes.cardTitle}\r\n              />\r\n              <CardMedia\r\n                component=\"img\"\r\n                className={classes.media}\r\n                height=\"auto\"\r\n                image={region.location_img && ( BASE_IMG_URL+region.location_img )}\r\n                title={region.location}\r\n                alt-title={region.location}\r\n              />\r\n              <CardContent className={classes.cardContent}>\r\n                <List className={classes.listAnno} disablePadding={true}>\r\n                  {region.locations.map(data => (\r\n                      <LocationDetails \r\n                        data={data} dataGeneral={dataGeneral}\r\n                      />\r\n                  ))}\r\n                </List>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n\r\n  /*return (\r\n    <div>\r\n      {data.map(region => (\r\n        <ExpansionPanel\r\n          key={region.id}\r\n          count={region.count}\r\n          location={region.location}\r\n          location_img={region.location_img}\r\n          locations={region.locations}\r\n          className={classes.root}\r\n        >\r\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography className={classes.heading}>\r\n              {region.location} \r\n              <CounterChip label={region.count}></CounterChip>\r\n            </Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails className={classes.expanPanDet}>\r\n            {region.location_img && (<img src={BASE_IMG_URL+region.location_img} alt={region.location} width='100%' />)}\r\n            {region.locations.map(data => (\r\n              <LocationDetails \r\n                data={data}\r\n              />\r\n            ))}\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      ))}\r\n    </div>\r\n  );*/\r\n}\r\n\r\nCardGrid.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CardGrid);"]},"metadata":{},"sourceType":"module"}